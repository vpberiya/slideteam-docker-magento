#!/bin/bash
set -o errexit

MEM=$(docker info | grep "Total Memory" | cut -d':' -f2 | xargs | sed s/GiB//)
# Docker reports RAM 0.2 less than what it is actually set to
(( $(echo "$MEM < 5.8" | bc -l) )) && echo "There must be at least 6GB of RAM allocated to Docker to continue." && exit

# shellcheck source=../env/db.env
source env/db.env
# shellcheck source=../env/elasticsearch.env
source env/elasticsearch.env
# shellcheck source=../env/magento.env
source env/magento.env
# shellcheck source=../env/rabbitmq.env
source env/rabbitmq.env

DOMAIN=${1:-magento.test}

bin/stop

bin/docker-compose --no-dev up -d
[ $? != 0 ] && echo "Failed to start Docker services" && exit

bin/clinotty chmod u+x bin/magento
rm -rf src && mkdir src

echo "Copying env.php file from host to container "
docker-compose cp ./slideteam/env.php phpfpm:/var/www/html/app/etc/env.php

echo "Copying wp config file from host to container "
docker-compose cp ./slideteam/wp-config.php phpfpm:/var/www/html/pub/wp/wp-config.php

echo "Copying License.php file from host to container "
docker-compose cp ./slideteam/License.php phpfpm:/var/www/html/app/code/Mgt/Varnish/Model/License.php

echo "Copying LayoutPlugin.php file from host to container "
docker-compose cp ./slideteam/LayoutPlugin.php phpfpm:/var/www/html/app/code/Mgt/Varnish/Model/Plugin/LayoutPlugin.php

echo "Copying files from container to host "
bin/copyfromcontainer --all

echo "Setup Upgrade..."
bin/clinotty bin/magento setup:upgrade

echo "Forcing deploy of static content to speed up initial requests..."
bin/clinotty bin/magento setup:static-content:deploy -f

echo "Re-indexing with Elasticsearch..."
bin/clinotty bin/magento indexer:reindex

echo "Setting basic URL and generating SSL certificate..."
bin/setup-domain "${DOMAIN}"

echo "Set Wordpress path in magento"
bin/clinotty bin/magento config:set wordpress/setup/path /var/www/html/pub/wp

echo "Fixing owner and permissions..."
bin/fixowns
bin/fixperms

echo "Clearing the cache to apply updates..."
bin/clinotty bin/magento cache:flush

echo "Installing cron, run 'bin/cron start' to enable..."
bin/clinotty bin/magento cron:install

echo "Turning on developer mode..."
bin/clinotty bin/magento deploy:mode:set developer

cp -r .vscode src/

echo "Docker development environment setup complete."
echo "You may now access your Magento instance at https://${DOMAIN}/"
